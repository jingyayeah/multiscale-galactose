width = 4000, height = 1000, units = "px", bg = "white",  res = 200)
}
par(mfrow=c(1,Nc))
for (name in pv_compounds){
plotCompound(time, MI.mat[[name]], name, col=ccolors[name], xlim=(0,35), ylim=c(0,0.5))
}
help(rowIQRs)
tmp
max(0, tmp)
tmp[tmp<0] <-0
tmp
library(MultiscaleAnalysis)
name="PV__rbcM"
plotCompound(time, MI.mat[[name]][,1:200], name, col=ccolors[name], ylim=c(0,0.8))
library(MultiscaleAnalysis)
name="PV__rbcM"
plotCompound(time, MI.mat[[name]][,1:200], name, col=ccolors[name], ylim=c(0,0.8))
name="PV__rbcM"
plotCompound(time, MI.mat[[name]], name, col=ccolors[name], ylim=c(0,0.8))
name="PV__rbcM"
time <- readTimeForSimulation(ma.settings$dir.simdata, rownames(pars)[1])-10.0
Nc <- length(pv_compounds)
plotCompound(time, MI.mat[[name]], name, col=ccolors[name], ylim=c(0,0.8))
rm(list=ls())
library('MultiscaleAnalysis')
library('matrixStats')
setwd(ma.settings$dir.results)
compounds = c('gal', 'rbcM', 'alb', 'suc', 'h2oM')
ccolors = c('black', 'red', 'darkgreen', 'darkorange', 'darkblue')
pv_compounds = paste('PV__', compounds, sep='')
names(ccolors) <- pv_compounds
# Plot all the single curves with mean and std
createAllPlot <- function(create_plot_files=F){
time <- readTimeForSimulation(ma.settings$dir.simdata, rownames(pars)[1])-10.0
Nc <- length(pv_compounds)
# Create the plot
if (create_plot_files == TRUE){
png(filename=paste(ma.settings$dir.results, '/', task, "_Dilution_Curves.png", sep=""),
width = 4000, height = 1000, units = "px", bg = "white",  res = 200)
}
par(mfrow=c(1,Nc))
for (name in pv_compounds){
plotCompound(time, MI.mat[[name]], name, col=ccolors[name], xlim=(0,35), ylim=c(0,0.5))
}
## Load the preprocessed data ##
sname <- '2014-04-20_MultipleIndicator'
version <- 'v11'
ma.settings$dir.simdata <- file.path(ma.settings$dir.results, sname, 'data')
tasks <- paste('T', seq(6,10), sep='')
peaks <- c('P00', 'P01', 'P02', 'P03', 'P04')
for (kt in seq(length(tasks))){
task <- tasks[kt]
peak <- peaks[kt]
modelId <- paste('MultipleIndicator_', peak, '_', version, '_Nc20_Nf1', sep='')
parsfile <- file.path(ma.settings$dir.results, sname,
paste(task, '_', modelId, '_parameters.csv', sep=""))
# Load the data
load(file=outfileFromParsFile(parsfile))
summary(pars)
# Create the plots
createAllPlot(create_plot_files=TRUE)
}
# Plot all the single curves with mean and std
createAllPlot <- function(create_plot_files=F){
time <- readTimeForSimulation(ma.settings$dir.simdata, rownames(pars)[1])-10.0
Nc <- length(pv_compounds)
# Create the plot
if (create_plot_files == TRUE){
png(filename=paste(ma.settings$dir.results, '/', task, "_Dilution_Curves.png", sep=""),
width = 4000, height = 1000, units = "px", bg = "white",  res = 200)
}
par(mfrow=c(1,Nc))
for (name in pv_compounds){
plotCompound(time, MI.mat[[name]], name, col=ccolors[name], xlim=(0,35), ylim=c(0,0.5))
}
rm(list=ls())
library('MultiscaleAnalysis')
library('matrixStats')
setwd(ma.settings$dir.results)
compounds = c('gal', 'rbcM', 'alb', 'suc', 'h2oM')
ccolors = c('black', 'red', 'darkgreen', 'darkorange', 'darkblue')
pv_compounds = paste('PV__', compounds, sep='')
names(ccolors) <- pv_compounds
# Plot all the single curves with mean and std
createAllPlot <- function(create_plot_files=F){
time <- readTimeForSimulation(ma.settings$dir.simdata, rownames(pars)[1])-10.0
Nc <- length(pv_compounds)
# Create the plot
if (create_plot_files == TRUE){
png(filename=paste(ma.settings$dir.results, '/', task, "_Dilution_Curves.png", sep=""),
width = 4000, height = 1000, units = "px", bg = "white",  res = 200)
}
par(mfrow=c(1,Nc))
for (name in pv_compounds){
plotCompound(time, MI.mat[[name]], name, col=ccolors[name], xlim=(0,35), ylim=c(0,0.5))
}
par(mfrow=c(1,1))
if (create_plot_files == TRUE){
dev.off()
}
}
rm(list=ls())
library('MultiscaleAnalysis')
library('matrixStats')
setwd(ma.settings$dir.results)
compounds = c('gal', 'rbcM', 'alb', 'suc', 'h2oM')
ccolors = c('black', 'red', 'darkgreen', 'darkorange', 'darkblue')
pv_compounds = paste('PV__', compounds, sep='')
names(ccolors) <- pv_compounds
# Plot all the single curves with mean and std
createAllPlot <- function(create_plot_files=F){
time <- readTimeForSimulation(ma.settings$dir.simdata, rownames(pars)[1])-10.0
Nc <- length(pv_compounds)
# Create the plot
if (create_plot_files == TRUE){
png(filename=paste(ma.settings$dir.results, '/', task, "_Dilution_Curves.png", sep=""),
width = 4000, height = 1000, units = "px", bg = "white",  res = 200)
}
par(mfrow=c(1,Nc))
for (name in pv_compounds){
plotCompound(time, MI.mat[[name]], name, col=ccolors[name], xlim=c(0,35), ylim=c(0,0.5))
}
par(mfrow=c(1,1))
if (create_plot_files == TRUE){
dev.off()
}
}
## Load the preprocessed data ##
sname <- '2014-04-20_MultipleIndicator'
version <- 'v11'
ma.settings$dir.simdata <- file.path(ma.settings$dir.results, sname, 'data')
tasks <- paste('T', seq(6,10), sep='')
peaks <- c('P00', 'P01', 'P02', 'P03', 'P04')
for (kt in seq(length(tasks))){
task <- tasks[kt]
peak <- peaks[kt]
modelId <- paste('MultipleIndicator_', peak, '_', version, '_Nc20_Nf1', sep='')
parsfile <- file.path(ma.settings$dir.results, sname,
paste(task, '_', modelId, '_parameters.csv', sep=""))
# Load the data
load(file=outfileFromParsFile(parsfile))
summary(pars)
# Create the plots
createAllPlot(create_plot_files=TRUE)
}
# Plot all the single curves with mean and std
createAllPlot <- function(create_plot_files=F){
time <- readTimeForSimulation(ma.settings$dir.simdata, rownames(pars)[1])-10.0
Nc <- length(pv_compounds)
# Create the plot
if (create_plot_files == TRUE){
png(filename=paste(ma.settings$dir.results, '/', task, "_Dilution_Curves.png", sep=""),
width = 4000, height = 1000, units = "px", bg = "white",  res = 200)
}
par(mfrow=c(1,Nc))
for (name in pv_compounds){
plotCompound(time, MI.mat[[name]], name, col=ccolors[name], xlim=c(0,35), ylim=c(0,4.0))
}
par(mfrow=c(1,1))
if (create_plot_files == TRUE){
dev.off()
}
}
## Load the preprocessed data ##
sname <- '2014-04-20_MultipleIndicator'
version <- 'v11'
ma.settings$dir.simdata <- file.path(ma.settings$dir.results, sname, 'data')
tasks <- paste('T', seq(6,10), sep='')
peaks <- c('P00', 'P01', 'P02', 'P03', 'P04')
for (kt in seq(length(tasks))){
task <- tasks[kt]
peak <- peaks[kt]
modelId <- paste('MultipleIndicator_', peak, '_', version, '_Nc20_Nf1', sep='')
parsfile <- file.path(ma.settings$dir.results, sname,
paste(task, '_', modelId, '_parameters.csv', sep=""))
# Load the data
load(file=outfileFromParsFile(parsfile))
summary(pars)
# Create the plots
createAllPlot(create_plot_files=TRUE)
}
# Plot all the single curves with mean and std
createAllPlot <- function(create_plot_files=F){
time <- readTimeForSimulation(ma.settings$dir.simdata, rownames(pars)[1])-10.0
Nc <- length(pv_compounds)
# Create the plot
if (create_plot_files == TRUE){
png(filename=paste(ma.settings$dir.results, '/', task, "_Dilution_Curves.png", sep=""),
width = 4000, height = 1000, units = "px", bg = "white",  res = 200)
}
par(mfrow=c(1,Nc))
for (name in pv_compounds){
plotCompound(time, MI.mat[[name]], name, col=ccolors[name], xlim=c(0,35), ylim=c(0,4.0))
}
par(mfrow=c(1,1))
if (create_plot_files == TRUE){
dev.off()
}
}
## Load the preprocessed data ##
sname <- '2014-04-20_MultipleIndicator'
version <- 'v11'
ma.settings$dir.simdata <- file.path(ma.settings$dir.results, sname, 'data')
tasks <- paste('T', seq(6,10), sep='')
peaks <- c('P00', 'P01', 'P02', 'P03', 'P04')
for (kt in seq(length(tasks))){
task <- tasks[kt]
peak <- peaks[kt]
modelId <- paste('MultipleIndicator_', peak, '_', version, '_Nc20_Nf1', sep='')
parsfile <- file.path(ma.settings$dir.results, sname,
paste(task, '_', modelId, '_parameters.csv', sep=""))
# Load the data
load(file=outfileFromParsFile(parsfile))
summary(pars)
# Create the plots
createAllPlot(create_plot_files=TRUE)
}
rm(list=ls())
library('MultiscaleAnalysis')
library('matrixStats')
setwd(ma.settings$dir.results)
compounds = c('gal', 'rbcM', 'alb', 'suc', 'h2oM')
ccolors = c('black', 'red', 'darkgreen', 'darkorange', 'darkblue')
pv_compounds = paste('PV__', compounds, sep='')
names(ccolors) <- pv_compounds
# Plot all the single curves with mean and std
createAllPlot <- function(create_plot_files=F){
time <- readTimeForSimulation(ma.settings$dir.simdata, rownames(pars)[1])-10.0
Nc <- length(pv_compounds)
# Create the plot
if (create_plot_files == TRUE){
png(filename=paste(ma.settings$dir.results, '/', task, "_Dilution_Curves.png", sep=""),
width = 4000, height = 1000, units = "px", bg = "white",  res = 200)
}
par(mfrow=c(1,Nc))
for (name in pv_compounds){
plotCompound(time, MI.mat[[name]], name, col=ccolors[name], xlim=c(0,15), ylim=c(0,2.5))
}
par(mfrow=c(1,1))
if (create_plot_files == TRUE){
dev.off()
}
}
## Load the preprocessed data ##
sname <- '2014-04-20_MultipleIndicator'
version <- 'v11'
ma.settings$dir.simdata <- file.path(ma.settings$dir.results, sname, 'data')
tasks <- paste('T', seq(6,10), sep='')
peaks <- c('P00', 'P01', 'P02', 'P03', 'P04')
for (kt in seq(length(tasks))){
task <- tasks[kt]
peak <- peaks[kt]
modelId <- paste('MultipleIndicator_', peak, '_', version, '_Nc20_Nf1', sep='')
parsfile <- file.path(ma.settings$dir.results, sname,
paste(task, '_', modelId, '_parameters.csv', sep=""))
# Load the data
load(file=outfileFromParsFile(parsfile))
summary(pars)
# Create the plots
createAllPlot(create_plot_files=TRUE)
}
library(MultiscaleAnalysis)
rm(list=ls())
library('MultiscaleAnalysis')
library('matrixStats')
setwd(ma.settings$dir.results)
compounds = c('gal', 'rbcM', 'alb', 'suc', 'h2oM')
ccolors = c('black', 'red', 'darkgreen', 'darkorange', 'darkblue')
pv_compounds = paste('PV__', compounds, sep='')
names(ccolors) <- pv_compounds
# Plot all the single curves with mean and std
createAllPlot <- function(create_plot_files=F){
time <- readTimeForSimulation(ma.settings$dir.simdata, rownames(pars)[1])-10.0
Nc <- length(pv_compounds)
# Create the plot
if (create_plot_files == TRUE){
png(filename=paste(ma.settings$dir.results, '/', task, "_Dilution_Curves.png", sep=""),
width = 4000, height = 1000, units = "px", bg = "white",  res = 200)
}
par(mfrow=c(1,Nc))
for (name in pv_compounds){
plotCompound(time, MI.mat[[name]], name, col=ccolors[name], xlim=c(0,15), ylim=c(0,2.5))
}
par(mfrow=c(1,1))
if (create_plot_files == TRUE){
dev.off()
}
}
## Load the preprocessed data ##
sname <- '2014-04-20_MultipleIndicator'
version <- 'v11'
ma.settings$dir.simdata <- file.path(ma.settings$dir.results, sname, 'data')
tasks <- paste('T', seq(6,10), sep='')
peaks <- c('P00', 'P01', 'P02', 'P03', 'P04')
for (kt in seq(length(tasks))){
task <- tasks[kt]
peak <- peaks[kt]
modelId <- paste('MultipleIndicator_', peak, '_', version, '_Nc20_Nf1', sep='')
parsfile <- file.path(ma.settings$dir.results, sname,
paste(task, '_', modelId, '_parameters.csv', sep=""))
# Load the data
load(file=outfileFromParsFile(parsfile))
summary(pars)
# Create the plots
createAllPlot(create_plot_files=TRUE)
}
## Combined Dilution Curves in one plot ##
createMeanPlot <- function(create_plot_files=F){
time <- readTimeForSimulation(ma.settings$dir.simdata, rownames(pars)[1])-10.0
Nc <- length(pv_compounds)
if (create_plot_files == TRUE){
png(filename=paste(info.folder, '/', task, "_Dilution_Curves_Combined.png", sep=""),
width = 1000, height = 1000, units = "px", bg = "white",  res = 150)
}
par(mfrow=c(1,1))
for (kc in seq(1, length(compounds)) ){
for (name in pv_compounds){
plotCompoundMean(time, MI.mat[[name]], col=ccolors[name], xlim=c(0,15), ylim=c(0,2.5))
}
}
par(mfrow=c(1,1))
dev.off()
}
## Combined Dilution Curves in one plot ##
createMeanPlot <- function(create_plot_files=F){
time <- readTimeForSimulation(ma.settings$dir.simdata, rownames(pars)[1])-10.0
Nc <- length(pv_compounds)
if (create_plot_files == TRUE){
png(filename=paste(info.folder, '/', task, "_Dilution_Curves_Combined.png", sep=""),
width = 1000, height = 1000, units = "px", bg = "white",  res = 150, xlim=c(0,15), ylim=c(0,2.5))
}
par(mfrow=c(1,1))
for (kc in seq(1, length(compounds)) ){
for (name in pv_compounds){
plotCompoundMean(time, MI.mat[[name]], col=ccolors[name])
}
}
par(mfrow=c(1,1))
dev.off()
}
sname <- '2014-04-20_MultipleIndicator'
version <- 'v11'
ma.settings$dir.simdata <- file.path(ma.settings$dir.results, sname, 'data')
tasks <- paste('T', seq(6,10), sep='')
peaks <- c('P00', 'P01', 'P02', 'P03', 'P04')
for (kt in seq(length(tasks))){
task <- tasks[kt]
peak <- peaks[kt]
modelId <- paste('MultipleIndicator_', peak, '_', version, '_Nc20_Nf1', sep='')
parsfile <- file.path(ma.settings$dir.results, sname,
paste(task, '_', modelId, '_parameters.csv', sep=""))
# Load the data
load(file=outfileFromParsFile(parsfile))
summary(pars)
# Create the plots
# createAllPlot(create_plot_files=TRUE)
createMeanPlot(create_plot_files=TRUE)
}
## Combined Dilution Curves in one plot ##
createMeanPlot <- function(create_plot_files=F){
time <- readTimeForSimulation(ma.settings$dir.simdata, rownames(pars)[1])-10.0
Nc <- length(pv_compounds)
if (create_plot_files == TRUE){
png(filename=paste(ma.settings$dir.results, '/', task, "_Dilution_Curves_Combined.png", sep=""),
width = 1000, height = 1000, units = "px", bg = "white",  res = 150, xlim=c(0,15), ylim=c(0,2.5))
}
par(mfrow=c(1,1))
for (kc in seq(1, length(compounds)) ){
for (name in pv_compounds){
plotCompoundMean(time, MI.mat[[name]], col=ccolors[name])
}
}
par(mfrow=c(1,1))
dev.off()
}
## Load the preprocessed data ##
sname <- '2014-04-20_MultipleIndicator'
version <- 'v11'
ma.settings$dir.simdata <- file.path(ma.settings$dir.results, sname, 'data')
tasks <- paste('T', seq(6,10), sep='')
peaks <- c('P00', 'P01', 'P02', 'P03', 'P04')
for (kt in seq(length(tasks))){
task <- tasks[kt]
peak <- peaks[kt]
modelId <- paste('MultipleIndicator_', peak, '_', version, '_Nc20_Nf1', sep='')
parsfile <- file.path(ma.settings$dir.results, sname,
paste(task, '_', modelId, '_parameters.csv', sep=""))
# Load the data
load(file=outfileFromParsFile(parsfile))
summary(pars)
# Create the plots
# createAllPlot(create_plot_files=TRUE)
createMeanPlot(create_plot_files=TRUE)
}
createMeanPlot <- function(create_plot_files=F){
time <- readTimeForSimulation(ma.settings$dir.simdata, rownames(pars)[1])-10.0
Nc <- length(pv_compounds)
if (create_plot_files == TRUE){
png(filename=paste(ma.settings$dir.results, '/', task, "_Dilution_Curves_Combined.png", sep=""),
width = 1000, height = 1000, units = "px", bg = "white")
}
par(mfrow=c(1,1))
plot(numeric(0), numeric(0), 'l', main=name,
xlab="time [s]", ylab="c [mM]", xlim=c(0,30), ylim=c(0,1.5))
for (kc in seq(1, length(compounds)) ){
for (name in pv_compounds){
plotCompoundMean(time, MI.mat[[name]], col=ccolors[name])
}
}
par(mfrow=c(1,1))
dev.off()
}
## Load the preprocessed data ##
sname <- '2014-04-20_MultipleIndicator'
version <- 'v11'
ma.settings$dir.simdata <- file.path(ma.settings$dir.results, sname, 'data')
tasks <- paste('T', seq(6,10), sep='')
peaks <- c('P00', 'P01', 'P02', 'P03', 'P04')
for (kt in seq(length(tasks))){
task <- tasks[kt]
peak <- peaks[kt]
modelId <- paste('MultipleIndicator_', peak, '_', version, '_Nc20_Nf1', sep='')
parsfile <- file.path(ma.settings$dir.results, sname,
paste(task, '_', modelId, '_parameters.csv', sep=""))
# Load the data
load(file=outfileFromParsFile(parsfile))
summary(pars)
# Create the plots
# createAllPlot(create_plot_files=TRUE)
createMeanPlot(create_plot_files=TRUE)
}
## Combined Dilution Curves in one plot ##
createMeanPlot <- function(create_plot_files=F){
time <- readTimeForSimulation(ma.settings$dir.simdata, rownames(pars)[1])-10.0
Nc <- length(pv_compounds)
if (create_plot_files == TRUE){
png(filename=paste(ma.settings$dir.results, '/', task, "_Dilution_Curves_Combined.png", sep=""),
width = 1000, height = 1000, units = "px", bg = "white")
}
par(mfrow=c(1,1))
plot(numeric(0), numeric(0), 'l',
xlab="time [s]", ylab="c [mM]", xlim=c(0,30), ylim=c(0,1.5))
for (kc in seq(1, length(compounds)) ){
for (name in pv_compounds){
plotCompoundMean(time, MI.mat[[name]], col=ccolors[name])
}
}
par(mfrow=c(1,1))
dev.off()
}
## Load the preprocessed data ##
sname <- '2014-04-20_MultipleIndicator'
version <- 'v11'
ma.settings$dir.simdata <- file.path(ma.settings$dir.results, sname, 'data')
tasks <- paste('T', seq(6,10), sep='')
peaks <- c('P00', 'P01', 'P02', 'P03', 'P04')
for (kt in seq(length(tasks))){
task <- tasks[kt]
peak <- peaks[kt]
modelId <- paste('MultipleIndicator_', peak, '_', version, '_Nc20_Nf1', sep='')
parsfile <- file.path(ma.settings$dir.results, sname,
paste(task, '_', modelId, '_parameters.csv', sep=""))
# Load the data
load(file=outfileFromParsFile(parsfile))
summary(pars)
# Create the plots
# createAllPlot(create_plot_files=TRUE)
createMeanPlot(create_plot_files=TRUE)
}
rm(list=ls())   # Clear all objects
library(MultiscaleAnalysis)
setwd(ma.settings$dir.results)
sname <- '2014-04-30_MultipleIndicator'
ma.settings$dir.simdata <- file.path(ma.settings$dir.results, sname, 'data')
tasks <- paste('T', seq(11,15), sep='')
peaks <- c('P00', 'P01', 'P02', 'P03', 'P04')
for (kt in seq(length(tasks))){
task <- tasks[kt]
peak <- peaks[kt]
modelId <- paste('MultipleIndicator_', peak, '_v13_Nc20_Nf1', sep='')
parsfile <- file.path(ma.settings$dir.results, sname,
paste(task, '_', modelId, '_parameters.csv', sep=""))
# Do the preprocessing
# preprocess(parsfile=parsfile, sim.dir=ma.settings$dir.simdata,
#            outFile='test.out', max_index=2)
preprocess(parsfile, ma.settings$dir.simdata)
}
rm(list=ls())   # Clear all objects
library(MultiscaleAnalysis)
setwd(ma.settings$dir.results)
sname <- '2014-04-30_MultipleIndicator'
ma.settings$dir.simdata <- file.path(ma.settings$dir.results, sname, 'data')
tasks <- paste('T', seq(11,15), sep='')
peaks <- c('P00', 'P01', 'P02', 'P03', 'P04')
for (kt in seq(length(tasks))){
task <- tasks[kt]
peak <- peaks[kt]
modelId <- paste('MultipleIndicator_', peak, '_v13_Nc20_Nf1', sep='')
parsfile <- file.path(ma.settings$dir.results, sname,
paste(task, '_', modelId, '_parameters.csv', sep=""))
# Do the preprocessing
# preprocess(parsfile=parsfile, sim.dir=ma.settings$dir.simdata,
#            outFile='test.out', max_index=2)
preprocess(parsfile, ma.settings$dir.simdata)
}
install.packages('data.table')
install.packages(data.table)
install.packages('data.table)
)
''
'##'
install.packages('data.table')
