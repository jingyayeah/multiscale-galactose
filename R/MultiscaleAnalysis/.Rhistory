# data$x <- mar1988$age
# data$xname <- 'age'
# data$xunit <- '[years]'
# data$xlim <- c(20,90)
# data$y <- mar1988$GEC
# data$yname <- 'GEC'
# data$yunit <- '[mmol/min]'
# data$ylim <- c(1.0, 5.0)
# @author: Matthias Koenig
# @date: 2014-09-21
##############################################
create_plots = T
##############################################
# Linear regression analysis
##############################################
linear_regression <- function(data){
attach(data)
res <- list()
res$name <- paste(yname, 'vs', xname)
res$cor <- cor(x, y)
res$cor.test <- cor.test(x, y)
res$df <- data.frame(x=x, y=y)
names(res$df) <- c(xname, yname)
# linear regression
res$m1 <- lm(y ~ x, data=res$df)
print(res$m1)
# Confidence Limits on the Estimated Coefficients
res$confint <- confint(res$m1, level=0.95)
detach(data)
return(res)
}
res <- linear_regression(lm.data)
##############################################
# Info file
##############################################
sink.fname <-  file.path(ma.settings$dir.results, 'linear_regression', paste(res$name, ".log", sep=''))
sink.file <- file(sink.fname, open = "wt")
sink(sink.file)
sink(sink.file, type="message")
print('### Linear Regression Model ###')
print('* data *')
str(lm.data)
print('* model *')
summary(res$m1)
print(res$confint)
sink(type="message")
sink()
file.show(sink.fname)
##############################################
# Create Plots
##############################################
create_plots=T
linear_regression_plots <- function(res, data){
attach(data)
if (create_plots == TRUE){
plot.file <- file.path(ma.settings$dir.results, 'linear_regression',
paste(res$name, '_plot1.png', sep=""))
print(plot.file)
png(filename=plot.file,
width = 800, height = 800, units = "px", bg = "white",  res = 150)
}
# Plot the linear regression with the data
plot(x, y, xlab=paste(xname, xunit),
ylab=paste(yname, yunit),
xlim=xlim, ylim=ylim,
main=paste(yname, 'vs.', xname))
abline(res$m1, col='red')
# get the confidence intervals for the betas
conf.interval <- predict(res$m1, interval="confidence")
lines(x, conf.interval[,2], lty=2)
lines(x, conf.interval[,3], lty=2)
# get prediction intervals
newx <- seq(min(x), max(x), length.out = 100)
for (level in c(0.66, 0.95)){
pred.interval <- predict(res$m1, newdata=data.frame(x=newx), interval="prediction", level=level)
lines(newx,pred.interval[,2], lty=3, col='blue')
lines(newx,pred.interval[,3], lty=3, col='blue')
}
if (create_plots==TRUE){ dev.off() }
# Residual and control plots
if (create_plots == TRUE){
plot.file <- file.path(ma.settings$dir.results, 'linear_regression',
paste(res$name, '_plot2.png', sep=""))
print(plot.file)
png(filename=plot.file,
width = 800, height = 800, units = "px", bg = "white",  res = 150)
}
par(mfrow=c(2,2))
plot(res$m1)
par(mfrow=c(1,1))
if (create_plots==TRUE){ dev.off() }
detach(data)
}
linear_regression_plots(res,data=lm.data)
create_plots = T
##############################################
# Linear regression analysis
##############################################
linear_regression <- function(data){
attach(data)
res <- list()
res$name <- paste(yname, 'vs', xname)
res$cor <- cor(x, y)
res$cor.test <- cor.test(x, y)
res$df <- data.frame(x=x, y=y)
names(res$df) <- c(xname, yname)
# linear regression
res$m1 <- lm(y ~ x, data=res$df)
print(res$m1)
# Confidence Limits on the Estimated Coefficients
res$confint <- confint(res$m1, level=0.95)
detach(data)
return(res)
}
res <- linear_regression(lm.data)
sink.fname <-  file.path(ma.settings$dir.results, 'linear_regression', paste(res$name, ".log", sep=''))
sink.file <- file(sink.fname, open = "wt")
sink(sink.file)
sink(sink.file, type="message")
print('### Linear Regression Model ###')
print('* data *')
str(lm.data)
print('* model *')
summary(res$m1)
print(res$confint)
sink(type="message")
sink()
file.show(sink.fname)
create_plots=T
linear_regression_plots <- function(res, data){
attach(data)
if (create_plots == TRUE){
plot.file <- file.path(ma.settings$dir.results, 'linear_regression',
paste(res$name, '_plot1.png', sep=""))
print(plot.file)
png(filename=plot.file,
width = 800, height = 800, units = "px", bg = "white",  res = 150)
}
# Plot the linear regression with the data
plot(x, y, xlab=paste(xname, xunit),
ylab=paste(yname, yunit),
xlim=xlim, ylim=ylim,
main=paste(yname, 'vs.', xname))
abline(res$m1, col='red')
# get the confidence intervals for the betas
conf.interval <- predict(res$m1, interval="confidence")
lines(x, conf.interval[,2], lty=2)
lines(x, conf.interval[,3], lty=2)
# get prediction intervals
newx <- seq(min(x), max(x), length.out = 100)
for (level in c(0.66, 0.95)){
pred.interval <- predict(res$m1, newdata=data.frame(x=newx), interval="prediction", level=level)
lines(newx,pred.interval[,2], lty=3, col='blue')
lines(newx,pred.interval[,3], lty=3, col='blue')
}
if (create_plots==TRUE){ dev.off() }
# Residual and control plots
if (create_plots == TRUE){
plot.file <- file.path(ma.settings$dir.results, 'linear_regression',
paste(res$name, '_plot2.png', sep=""))
print(plot.file)
png(filename=plot.file,
width = 800, height = 800, units = "px", bg = "white",  res = 150)
}
par(mfrow=c(2,2))
plot(res$m1)
par(mfrow=c(1,1))
if (create_plots==TRUE){ dev.off() }
detach(data)
}
linear_regression_plots(res,data=lm.data)
create_plots=T
linear_regression_plots <- function(res, data){
attach(data)
if (create_plots == TRUE){
plot.file <- file.path(ma.settings$dir.results, 'linear_regression',
paste(res$name, '_plot1.png', sep=""))
print(plot.file)
png(filename=plot.file,
width = 800, height = 800, units = "px", bg = "white",  res = 150)
}
# Plot the linear regression with the data
plot(x, y, xlab=paste(xname, xunit),
ylab=paste(yname, yunit),
xlim=xlim, ylim=ylim,
main=paste(yname, 'vs.', xname))
abline(res$m1, col='red')
# get the confidence intervals for the betas
conf.interval <- predict(res$m1, interval="confidence")
print(summary(x))
print(summary(conf.interval))
lines(x, conf.interval[,2], lty=2)
lines(x, conf.interval[,3], lty=2)
# get prediction intervals
newx <- seq(min(x), max(x), length.out = 100)
for (level in c(0.66, 0.95)){
pred.interval <- predict(res$m1, newdata=data.frame(x=newx), interval="prediction", level=level)
lines(newx,pred.interval[,2], lty=3, col='blue')
lines(newx,pred.interval[,3], lty=3, col='blue')
}
if (create_plots==TRUE){ dev.off() }
# Residual and control plots
if (create_plots == TRUE){
plot.file <- file.path(ma.settings$dir.results, 'linear_regression',
paste(res$name, '_plot2.png', sep=""))
print(plot.file)
png(filename=plot.file,
width = 800, height = 800, units = "px", bg = "white",  res = 150)
}
par(mfrow=c(2,2))
plot(res$m1)
par(mfrow=c(1,1))
if (create_plots==TRUE){ dev.off() }
detach(data)
}
linear_regression_plots(res,data=lm.data)
##############################################
# Create Plots
##############################################
create_plots=T
linear_regression_plots <- function(res, data){
attach(data)
if (create_plots == TRUE){
plot.file <- file.path(ma.settings$dir.results, 'linear_regression',
paste(res$name, '_plot1.png', sep=""))
print(plot.file)
png(filename=plot.file,
width = 800, height = 800, units = "px", bg = "white",  res = 150)
}
# Plot the linear regression with the data
plot(x, y, xlab=paste(xname, xunit),
ylab=paste(yname, yunit),
xlim=xlim, ylim=ylim,
main=paste(yname, 'vs.', xname))
abline(res$m1, col='red')
# get the confidence intervals for the betas
conf.interval <- predict(res$m1, interval="confidence")
print(str(conf.interval))
print(str(x))
lines(x, conf.interval[,2], lty=2)
lines(x, conf.interval[,3], lty=2)
# get prediction intervals
newx <- seq(min(x), max(x), length.out = 100)
for (level in c(0.66, 0.95)){
pred.interval <- predict(res$m1, newdata=data.frame(x=newx), interval="prediction", level=level)
lines(newx,pred.interval[,2], lty=3, col='blue')
lines(newx,pred.interval[,3], lty=3, col='blue')
}
if (create_plots==TRUE){ dev.off() }
# Residual and control plots
if (create_plots == TRUE){
plot.file <- file.path(ma.settings$dir.results, 'linear_regression',
paste(res$name, '_plot2.png', sep=""))
print(plot.file)
png(filename=plot.file,
width = 800, height = 800, units = "px", bg = "white",  res = 150)
}
par(mfrow=c(2,2))
plot(res$m1)
par(mfrow=c(1,1))
if (create_plots==TRUE){ dev.off() }
detach(data)
}
linear_regression_plots(res,data=lm.data)
length(unique(lm.data$x))
lm.data$x
makeFigure(data, main='GEC/kg vs. age', xname='age', yname='GECkg',
xlab='Age [years]', ylab='GEC [mmol/min/kg]',
xlim=c(0,90), ylim=c(0,0.07))
m1 <- lm(GEC, age, data=data)
data <- rbind( mar1988[, c('study', 'gender', 'age', 'GEC')],
tyg1962[, c('study', 'gender', 'age', 'GEC')],
sch1986.tab1[, c('study', 'gender', 'age', 'GEC')],
win1965[, c('study', 'gender', 'age', 'GEC')],
duc1979[, c('study', 'gender', 'age', 'GEC')])
data$gender <- as.factor(data$gender)
levels(data$gender) <- gender.levels
makeFigure(data, main='GEC vs. age', xname='age', yname='GEC',
xlab='Age [years]', ylab='GEC [mmol/min]',
xlim=c(0,90), ylim=c(0,5))
m1 <- lm(GEC, age, data=data)
m1 <- lm(GEC ~ age, data=data)
summary(m1)
abline(m1)
abline(m1)
plot(data$age, data$GEC)
abline(m1)
mar1988 <- read.csv(file.path(ma.settings$dir.expdata, "GEC_aging", "Marchesini1988_Fig.csv"), sep="\t")
mar1988 <- data.frame(subject=mar1988$subject,
age=mar1988$age,
GEC=mar1988$GEC,
HVI=mar1988$HVI[order(mar1988$subject)],
volLiver=mar1988$volLiver[order(mar1988$subject)])
mar1988$study = 'mar1988'
mar1988$gender = 'all'
head(mar1988)
data <- rbind( mar1988[, c('study', 'gender', 'age', 'GEC')],
tyg1962[, c('study', 'gender', 'age', 'GEC')],
sch1986.tab1[, c('study', 'gender', 'age', 'GEC')],
win1965[, c('study', 'gender', 'age', 'GEC')],
duc1979[, c('study', 'gender', 'age', 'GEC')])
data$gender <- as.factor(data$gender)
levels(data$gender) <- gender.levels
makeFigure(data, main='GEC vs. age', xname='age', yname='GEC',
xlab='Age [years]', ylab='GEC [mmol/min]',
xlim=c(0,90), ylim=c(0,5))
data <- rbind( mar1988[, c('study', 'gender', 'age', 'volLiver')],
wyn1989.fig2a[, c('study', 'gender', 'age', 'volLiver')])
data$gender <- as.factor(data$gender)
levels(data$gender) <- gender.levels
makeFigure(data, main='Liver volume vs. age',xname='age', yname='volLiver',
xlab='Age [years]', ylab='Liver volume [ml]',
xlim=c(0,90), ylim=c(600,2000))
data <- rbind( mar1988[, c('study', 'gender', 'age', 'volLiver')])
data$gender <- as.factor(data$gender)
levels(data$gender) <- gender.levels
data <- rbind( mar1988[, c('study', 'gender', 'age', 'volLiver')])
data$gender <- as.factor(data$gender)
levels(data$gender) <- gender.levels
makeFigure(data, main='volume liver vs. age', xname='age', yname='volLiver',
xlab='Age [years]', ylab='Volume liver [ml]',
xlim=c(0,90))
makeFigure(data, main='volume liver vs. age', xname='age', yname='volLiver',
xlab='Age [years]', ylab='Volume liver [ml]',
xlim=c(0,90), ylim=(0, 3000))
makeFigure(data, main='volume liver vs. age', xname='age', yname='volLiver',
xlab='Age [years]', ylab='Volume liver [ml]',
xlim=c(0,90), ylim=c(0, 3000))
############################################
data <- rbind( mar1988[, c('study', 'gender', 'volLiver', 'GEC')])
data$gender <- as.factor(data$gender)
levels(data$gender) <- gender.levels
makeFigure(data, main='GEC vs. volLiver', xname='volLiver', yname='GEC',
xlab='Volume liver [ml]', ylab='GEC [mmol/min]',
xlim=c(500,2000), ylim=c(0, 5))
tyg1962 <- read.csv(file.path(ma.settings$dir.expdata, "GEC", "Tygstrup1962.csv"), sep="\t")
tyg1962$study = 'tyg1962'
tyg1962$gender = 'all'
tyg1962 <- tyg1962[tyg1962$state=='healthy', ]
head(tyg1962)
tyg1962 <- read.csv(file.path(ma.settings$dir.expdata, "GEC", "Tygstrup1962.csv"), sep="\t")
tyg1962$GECkg <- tyg1962$GEC/tyg1962$bodyweight
tyg1962$study = 'tyg1962'
tyg1962$gender = 'all'
tyg1962 <- tyg1962[tyg1962$state=='healthy', ]
head(tyg1962)
data <- rbind( tyg1962[, c('study', 'gender', 'age', 'GECkg'),
sch1986.fig1[, c('study', 'gender', 'age', 'GECkg')],
sch1986.tab1[, c('study', 'gender', 'age', 'GECkg')] )
data$gender <- as.factor(data$gender)
levels(data$gender) <- gender.levels
data <- rbind( tyg1962[, c('study', 'gender', 'age', 'GECkg')],
sch1986.fig1[, c('study', 'gender', 'age', 'GECkg')],
sch1986.tab1[, c('study', 'gender', 'age', 'GECkg')] )
data$gender <- as.factor(data$gender)
levels(data$gender) <- gender.levels
data
makeFigure(data, main='GEC/kg vs. age', xname='age', yname='GECkg',
xlab='Age [years]', ylab='GEC [mmol/min/kg]',
xlim=c(0,90), ylim=c(0,0.07))
head(sch1986.tab1)
sch1986.tab1 <- read.csv(file.path(ma.settings$dir.expdata, "GEC_aging", "Schnegg1986_Tab1.csv"), sep="\t")
head(sch1986.tab1)
sch1986.tab1 <- read.csv(file.path(ma.settings$dir.expdata, "GEC_aging", "Schnegg1986_Tab1.csv"), sep="\t")
head(sch1986.tab1)
sch1986.tab1$study <- 'sch1986'
sch1986.tab1$gender <- as.character(sch1986.tab1$sex)
sch1986.tab1$gender[sch1986.tab1$gender=='m'] <- 'male'
sch1986.tab1$gender[sch1986.tab1$gender=='f'] <- 'female'
sch1986.tab1$GECmgkg <- sch1986.tab1$GEC
sch1986.tab1$GEC <- sch1986.tab1$GECmgkg * sch1986.tab1$bodyweight/180; # [mg/min/kg -> mmol/min]
sch1986.tab1$GECkg <- sch1986.tab1$GECmgkg/180
head(sch1986.tab1)
# sex [m,f], age [years], bodyweight [kg], GEC [mg/min/kg]
sch1986.tab1 <- read.csv(file.path(ma.settings$dir.expdata, "GEC_aging", "Schnegg1986_Tab1.csv"), sep="\t")
head(sch1986.tab1)
sch1986.tab1$study <- 'sch1986'
sch1986.tab1$gender <- as.character(sch1986.tab1$sex)
sch1986.tab1$gender[sch1986.tab1$gender=='m'] <- 'male'
sch1986.tab1$gender[sch1986.tab1$gender=='f'] <- 'female'
sch1986.tab1$GECmgkg <- sch1986.tab1$GEC
sch1986.tab1$GEC <- sch1986.tab1$GECmgkg * sch1986.tab1$bodyweight/180; # [mg/min/kg -> mmol/min]
sch1986.tab1$GECkg <- sch1986.tab1$GECmgkg/180
head(sch1986.tab1)
# age [years], GEC [mg/min/kg]
sch1986.fig1 <- read.csv(file.path(ma.settings$dir.expdata, "GEC_aging", "Schnegg1986_Fig1.csv"), sep="\t")
sch1986.fig1$study <- 'sch1986'
sch1986.fig1$gender <- 'all'
sch1986.fig1$GECmgkg <- sch1986.fig1$GEC
sch1986.fig1$GECkg   <- sch1986.fig1$GEC/180
head(sch1986.fig1)
data <- rbind( tyg1962[, c('study', 'gender', 'age', 'GECkg')],
sch1986.fig1[, c('study', 'gender', 'age', 'GECkg')],
sch1986.tab1[, c('study', 'gender', 'age', 'GECkg')] )
data$gender <- as.factor(data$gender)
levels(data$gender) <- gender.levels
data
makeFigure(data, main='GEC/kg vs. age', xname='age', yname='GECkg',
xlab='Age [years]', ylab='GEC [mmol/min/kg]',
xlim=c(0,90), ylim=c(0,0.07))
data <- rbind( tyg1962[, c('study', 'gender', 'bodyweight', 'age')],
sch1986.tab1[, c('study', 'gender', 'bodyweight', 'age')],
win1965[, c('study', 'gender', 'bodyweight', 'age')],
duc1979[, c('study', 'gender', 'bodyweight', 'age')])
data$gender <- as.factor(data$gender)
levels(data$gender) <- gender.levels
makeFigure(data, main='Bodyweight vs. age',xname='age', yname='bodyweight',
xlab='Age [years]', ylab='Bodyweight [kg]',
xlim=c(0,90), ylim=c(40,140))
data <- rbind( mar1988[, c('study', 'gender', 'age', 'GEC')],
tyg1962[, c('study', 'gender', 'age', 'GEC')],
sch1986.tab1[, c('study', 'gender', 'age', 'GEC')],
win1965[, c('study', 'gender', 'age', 'GEC')],
duc1979[, c('study', 'gender', 'age', 'GEC')])
data$gender <- as.factor(data$gender)
levels(data$gender) <- gender.levels
makeFigure(data, main='GEC vs. age', xname='age', yname='GEC',
xlab='Age [years]', ylab='GEC [mmol/min]',
xlim=c(0,90), ylim=c(0,5))
m1 <- lm(GEC ~ age, data=data)
summary(m1)
plot(data$age, data$GEC)
abline(m1)
m1 <- lm(GEC ~ age, data=data)
summary(m1)
makeFigure(data, main='GEC vs. age', xname='age', yname='GEC',
xlab='Age [years]', ylab='GEC [mmol/min]',
xlim=c(0,90), ylim=c(0,5))
data <- rbind( tyg1962[, c('study', 'gender', 'age', 'GECkg')],
sch1986.fig1[, c('study', 'gender', 'age', 'GECkg')],
sch1986.tab1[, c('study', 'gender', 'age', 'GECkg')] )
data$gender <- as.factor(data$gender)
levels(data$gender) <- gender.levels
data
makeFigure(data, main='GEC/kg vs. age', xname='age', yname='GECkg',
xlab='Age [years]', ylab='GEC [mmol/min/kg]',
xlim=c(0,90), ylim=c(0,0.07))
lan2011 <- read.csv(file.path(ma.settings$dir.expdata, "GEC_aging", "Lange2011_Fig1.csv"), sep="\t")
head(lan2011)
lan2011 <- read.csv(file.path(ma.settings$dir.expdata, "GEC_aging", "Lange2011_Fig1.csv"), sep="\t")
lan2011$study = 'lan2011'
lan2011$gender = 'all'
lan2011$GECmumolkg <- lan2011$GEC
lan2011$GECkg <- lan2011$GEC/1000
lan2011 <- lan2011[lan2011$status=='healthy', ]
head(lan2011)
data <- rbind( lan2011[, c('study', 'gender', 'age', 'GECkg')],
tyg1962[, c('study', 'gender', 'age', 'GECkg')],
sch1986.fig1[, c('study', 'gender', 'age', 'GECkg')],
sch1986.tab1[, c('study', 'gender', 'age', 'GECkg')] )
data$gender <- as.factor(data$gender)
levels(data$gender) <- gender.levels
data
makeFigure(data, main='GEC/kg vs. age', xname='age', yname='GECkg',
xlab='Age [years]', ylab='GEC [mmol/min/kg]',
xlim=c(0,90), ylim=c(0,0.10))
duc1979 <- read.csv(file.path(ma.settings$dir.expdata, "GEC", "Ducry1979_Tab1.csv"), sep="\t")
head(duc1979)
duc1979$study <- 'duc1979'
duc1979$gender <- 'all'
head(duc1979)
data <- rbind( lan2011[, c('study', 'gender', 'age', 'GECkg')],
duc1973[, c('study', 'gender', 'age', 'GECkg')],
tyg1962[, c('study', 'gender', 'age', 'GECkg')],
sch1986.fig1[, c('study', 'gender', 'age', 'GECkg')],
sch1986.tab1[, c('study', 'gender', 'age', 'GECkg')] )
data$gender <- as.factor(data$gender)
levels(data$gender) <- gender.levels
makeFigure(data, main='GEC/kg vs. age', xname='age', yname='GECkg',
xlab='Age [years]', ylab='GEC [mmol/min/kg]',
xlim=c(0,90), ylim=c(0,0.10))
data <- rbind( duc1973[, c('study', 'gender', 'bodyweight', 'age')],
tyg1962[, c('study', 'gender', 'bodyweight', 'age')],
sch1986.tab1[, c('study', 'gender', 'bodyweight', 'age')],
win1965[, c('study', 'gender', 'bodyweight', 'age')],
duc1979[, c('study', 'gender', 'bodyweight', 'age')])
data$gender <- as.factor(data$gender)
levels(data$gender) <- gender.levels
makeFigure(data, main='Bodyweight vs. age',xname='age', yname='bodyweight',
xlab='Age [years]', ylab='Bodyweight [kg]',
xlim=c(0,90), ylim=c(40,140))
data <- rbind( lan2011[, c('study', 'gender', 'age', 'GECkg')],
duc1979[, c('study', 'gender', 'age', 'GECkg')],
tyg1962[, c('study', 'gender', 'age', 'GECkg')],
sch1986.fig1[, c('study', 'gender', 'age', 'GECkg')],
sch1986.tab1[, c('study', 'gender', 'age', 'GECkg')] )
data$gender <- as.factor(data$gender)
levels(data$gender) <- gender.levels
makeFigure(data, main='GEC/kg vs. age', xname='age', yname='GECkg',
xlab='Age [years]', ylab='GEC [mmol/min/kg]',
xlim=c(0,90), ylim=c(0,0.10))
############################################
data <- rbind( duc1979[, c('study', 'gender', 'bodyweight', 'age')],
tyg1962[, c('study', 'gender', 'bodyweight', 'age')],
sch1986.tab1[, c('study', 'gender', 'bodyweight', 'age')],
win1965[, c('study', 'gender', 'bodyweight', 'age')],
duc1979[, c('study', 'gender', 'bodyweight', 'age')])
data$gender <- as.factor(data$gender)
levels(data$gender) <- gender.levels
makeFigure(data, main='Bodyweight vs. age',xname='age', yname='bodyweight',
xlab='Age [years]', ylab='Bodyweight [kg]',
xlim=c(0,90), ylim=c(40,140))
data <- rbind( lan2011[, c('study', 'gender', 'age', 'GECkg')],
duc1979[, c('study', 'gender', 'age', 'GECkg')],
tyg1962[, c('study', 'gender', 'age', 'GECkg')],
sch1986.fig1[, c('study', 'gender', 'age', 'GECkg')],
sch1986.tab1[, c('study', 'gender', 'age', 'GECkg')] )
data$gender <- as.factor(data$gender)
levels(data$gender) <- gender.levels
makeFigure(data, main='GEC/kg vs. age', xname='age', yname='GECkg',
xlab='Age [years]', ylab='GEC [mmol/min/kg]',
xlim=c(0,90), ylim=c(0,0.10))
